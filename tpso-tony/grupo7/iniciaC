#! /usr/bin/bash

#!/bin/bash 

#------------------------------------------------------------------------------------------------------------

#PRECONDICIONES:
#Se setean las variables de entorno adecuadas para la ejecucion del tp. 
#Se verifica la version de perl instalada y se inicia el comando recibeC en caso de que no se esté ejecutando.


#POSCONDICIONES:
#Imprime por salida standard los avisos correspondientes a cada ejecucion. Si ocurre algún error termina con codigod e error distinto de 0. En caso contrario, igual a 0.


#VARIABLES GLOBALES---------------------------------------------------------------------------------------------

error_perl='************************************************************
* Para Iniciar el proceso de control de altas              *
* es necesario tener instalado Perl 5 o superior.          *
* Efectue su instalacion e intentelo nuevamente            *
************************************************************'

error_iniciar=' ****** ******  ******  ******  ******  
**     **  **  **  **  **  **  **  **  
****** *****   *****   **  **  *****   
**     **  **  **  **  **  **  **  **  
****** **   ** **   ** ******  **   **   '


#-----------------------------------------------------FUNCIONES-------------------------------------------------

#Precondiciones:
#Verifica la version de perl instalada en el sistema operativo en que se corre el comando.

#Condiciones:
#Si la version es igual o mas nueva que la 5, devuelve una cadena (por salida standard) con la version de perl instalada y retorno con codigo igual a 0. Si la version es mas vieja o no estuviera instalado perl, se devuelve un aviso con el error y termina con codigo distinto de 0.

#verificar Perl
verificarPerl()
{

	perl_instalado=$(which perl)
	if [ ! -z $perl_instalado ]
	then
		perl_version=$(perl -v)
		perl_version=$(echo $perl_version | cut -d ' ' -f4)
		perl_version_comp=$(echo $perl_version | cut -c 2-2)
		if [ $perl_version_comp -ge "5" ]
		then
			echo "*****************************************************************
* 'Version de perl instalada: '$perl_version		       		*
*****************************************************************"
			return 0
		else
			echo "$error_perl"
			return 1
		fi 
	else
		echo "$error_perl"
		return 1
	fi

}

#------------------------------------------------------------------------------------------------------------


#Poscondiciones:
#Devuelve 0 si la fecha del sistema es mayor a 2007-09, sino devuelve 0.

verificarFecha()
{
	if [ $(date '+%Y') -ge 2008 ]
	then
		return 0;
	elif [ $(date '+%Y') -ge 2007 ]
	then
		if [ $(date '+%m') -ge 10 ]
		then
			return 0;
		elif [ $(date '+%m') -ge 09 ]
		then
			if [ $(date '+%d') -ge 26 ]
			then
				return 0;
			else
			return 1;
			fi
		else
			return 1;
		fi
	else
		return 1;
	fi
}

#------------------------------------------------------------------------------------------------------------


#Precondiciones:
#Inicia el comando recibeC.

#Poscondiciones:
#Si el comando ya esta corriendo, muestra por pantalla un mensaje que indica cuanto hace que se esta corriendo. Si el comando no esta corriendo y la corrida es manual, no se hace nada. Si el comando no se esta ejecutando y la corrida es automatica se invoca al comando recibeC y muestra un mensaje indicando el processID del comando recibeC.

iniciarrecibeC()

{
	comando_a_verificar="recibeC"
	comando=$(ps | grep "$comando_a_verificar")
	if [ -z "$comando" ]
	then
		if [ "$AUTO" = SI ];
		then
			recibeC.sh
			if [ "$?" -eq 0 ]; then
				comando=$(ps | grep $comando_a_verificar)
				id=$(echo $comando | cut -d ' ' -f1)
				echo "****************************************************************
* $comando_a_verificar corriendo bajo el número: $id	       *
****************************************************************"
				return 0
			else
				return 1
			fi
		else
			return 0
		fi
	else
		tiempo_corriendo=$(ps -e | grep $comando_a_verificar | cut -c15-23)
		echo "el comando recibeC se se encuentra corriendo hace $tiempo_corriendo"
		return 0
	fi

}

#---------------------------------------------------PRINCIPAL------------------------------------------------
directorio_Actual=$(history | tail -n2)
dir_Actual1=$(echo $directorio_Actual | sed 's/.*\.\(.*\)/\1/')
dir_Actual=$(echo $dir_Actual1 | sed 's/\(.*\)\/.*\/\{1\}IniciaC/\1/')


if [ "$dir_Actual" = 'iniciaC' ]
then
	GRUPO=$(pwd | sed 's/\(.*\)\/iniciaC/\1/')
else
	if [ "$dir_Actual" = '/iniciaC' ]
	then
		GRUPO=$(pwd)
	else
		if [ $PWD = "/" ]
		then
			GRUPO=$(pwd)$dir_Actual
		else
			aux=$(pwd)/$dir_Actual
			GRUPO=$(echo $aux | sed 's/\(.*\)\/iniciaC/\1/')
		fi
	fi
fi
echo "$GRUPO"

if [[ -d $GRUPO && -d $GRUPO/tablas && -d $GRUPO/arribos && -d $GRUPO/prueba && -d $GRUPO/log && -d $GRUPO/norecibidos && -d $GRUPO/recibidos &&  -d $GRUPO/ivaC && -d $GRUPO/consultas && -d $GRUPO/recibidos/procesados ]]
then

	#setear variables de ambiente
	export GRUPO
	export PATH=$PATH:$GRUPO
	export DORMIR=5

#	ARCHVA=$GRUPO/datos/varsAmbiente
	
#	if [ -f $ARCHVA ]
#	then
#		periodo=$(grep "periodo=" $ARCHVA | cut -d '=' -f2)
#	else
#		PERIODO=200703
#		echo "periodo="$PERIODO >> $ARCHVA
		
#	fi

#	export periodo=$PERIODO
	
	#seteo permisos para los comandos y el resto de los archivos
	chmod -R ugo+r *
	chmod ugo+x *
	#verifico fecha ddel sistema
	verificarFecha
	if [ "$?" = 0 ]
	then
		echo "Fecha valida $(date '+%d/%m/%Y')"
		salida=0
		verificarPerl
		if [ "$?" = 0 ]
		then
			echo "Ingrese el tipo de corrida"
			echo "a - AUTO"
			echo "b - MANUAL"
			opcion=c
			while [ "$opcion" != a -a "$opcion" != A ]&&[ "$opcion" != b -a "$opcion" != B ]
			do
				read opcion	
				if [ -n "$opcion" ]
				then
					echo "opcion ingresada $opcion."
					if [ $opcion = a -o $opcion = A ]
					then
						AUTO=SI
						echo "Corrida Automatica"
					elif [ $opcion = b -o $opcion = B ]
					then
						AUTO=NO
						echo "Corrida Manual"
					else
						echo "Opcion no valida"
					fi
				fi
			done
			export AUTO
			iniciarrecibeC
			if [ "$?" = 0 ]
			then
				salida=0
			else
				echo "RecibeC sale con Errores"
				salida=1
			fi
		else
			echo "Error de Perl"
			salida=1
		fi
	else
		echo "La fecha del sistema no es correcta"
	fi
else
	echo Los directorios de trabajo no estan creados correctamente
	salida=1
fi


#exit $salida
#------------------------------------------------------------------------------------------------------------
